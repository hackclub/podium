# generated by datamodel-codegen:
#   filename:  temp_openapi.json
#   timestamp: 2025-07-31T18:16:55+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Literal, Optional, Union

from pydantic import BaseModel, Field


class Project(BaseModel):
    repo: str = Field(..., title='Repo')
    image_url: Optional[str] = Field('', title='Image Url')
    demo: str = Field(..., title='Demo')


class Results(BaseModel):
    demo: str = Field(..., title='Demo')
    repo: str = Field(..., title='Repo')
    image_url: str = Field(..., title='Image Url')
    reason: str = Field(..., title='Reason')
    image_valid: bool = Field(..., title='Image Valid')
    valid: bool = Field(..., title='Valid')


class TokenData(BaseModel):
    token_type: Literal['api'] = Field('api', title='Token Type')
    name: str = Field(..., title='Name')
    exp: datetime = Field(..., title='Exp')


class ValidationError(BaseModel):
    loc: List[Union[str, int]] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')
